{{- if .Values.controller.enabled }}
{{- $tlsEnabled := (and (ne .Values.pluginProcessor.tlsCertPath "") (ne .Values.pluginProcessor.tlsKeyPath "")) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "controller.fullname" . }}
  labels:
    {{- include "controller.labels" . | nindent 4 }}
spec:
{{- if not .Values.controller.autoscaling.enabled }}
  replicas: {{ .Values.controller.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "controller.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.controller.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "controller.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "controller.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: controller
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.controller.image.repository }}:{{ .Values.controller.image.tag | default "latest" }}"
          imagePullPolicy: {{ .Values.controller.image.pullPolicy }}
          command:
            - kopf
          args:
            - run
            - /app/main.py  
          env:
            - name: PYTHONBUFFERED
              value: "1"
            {{- range $name, $value := .Values.controller.env }}
            - name: {{ $name }}
              value: {{ $value }}
            {{- end }}
            {{- if .Values.backends.vault.enabled }}
            - name: USE_VAULT
              value: "true"
            - name: VAULT_ADDR
              value: {{ .Values.backends.vault.address }}
              {{- if .Values.backends.vault.ca_cert }}
            - name: VAULT_CACERT
              value: {{ .Values.backends.vault.ca_cert }}
              {{- end }}
            - name: VAULT_TOKEN
              value: {{ .Values.backends.vault.token_path }}
            {{- end }}
            {{- if .Values.backends.aws.enabled }}
            - name: AWS_ACCOUNT_ID
              value: {{ .Values.backends.aws.accountID }}
            - name: USE_AWS
              value: "true"
            - name: AWS_REGION
              value: {{ .Values.backends.aws.region }}
            {{- end }}
            {{- if .Values.backends.gcp.enabled }}
            - name: GCP_PROJECT_ID
              value: {{ .Values.backends.gc.projectID }}
            - name: USE_GCP
              value: "true"
            {{- end }}
          # ports:
          #   - name: http
          #     containerPort: 443
          #     protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          #     scheme: HTTPS
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          #     scheme: HTTPS
          resources:
            {{- toYaml .Values.controller.resources | nindent 12 }}
      {{- with .Values.controller.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}